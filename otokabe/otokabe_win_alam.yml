version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks: 
      - otonet
  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: 
      - otonet
  postgres:
    image: otokabe/postgres:12.1
    container_name: postgres
    volumes:
#      - $HOME/docker/volumes/postgres/data:/var/lib/postgresql/data
#      - C:/ProgramData/Docker/volumes/postgres/data:/var/lib/postgresql/data
#      - C:/Users/user/docker/volumes/postgres/data:/var/lib/postgresql/data
      - data-postgresql:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=tiga#333
    networks: 
      - otonet
  pgadmin:
    image: otokabe/pgadmin4:4.15
    container_name: pgadmin
    ports:
      - 5555:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=otokabe
      - PGADMIN_DEFAULT_PASSWORD=tiga#333
    networks: 
      - otonet
  jhidev:
    image: jhipster/jhipster:v6.5.1
    container_name: jhidev
    volumes:
#      - $HOME/Workspace/development/micro:/home/jhipster/app
#      - $HOME/.m2:/home/jhipster/.m2
      - C:/Users/user/beceng/otokabe:/home/jhipster/app
      - C:/Users/user/.m2:/home/jhipster/.m2
    ports:
      - 8080:8080
      - 9000:9000
      - 3001:3001
    environment:
      - _JAVA_OPTIONS='-Xmx512m -Xms256m'
      - PGADMIN_DEFAULT_PASSWORD=tiga#333
    networks: 
      - otonet
  registry:
    image: otokabe/registry:5.0.2
    container_name: registry
    volumes:
      - $HOME/docker/volumes/registry/central-config:/central-config
    # When run with the "dev" Spring profile, the JHipster Registry will
    # read the config from the local filesystem (central-server-config directory)
    # When run with the "prod" Spring profile, it will read the configuration from a Git repository
    # See https://www.jhipster.tech/jhipster-registry/#spring-cloud-config
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_SECURITY_USER_PASSWORD=dirahasiakan
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
    ports:
      - 8761:8761
    networks: 
      - otonet
  secuaa:
    image: otokabe/secuaa:latest
    container_name: secuaa
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,swagger
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://registry:$${jhipster.registry.password}@registry:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://registry:$${jhipster.registry.password}@registry:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/secuaa
      - SPRING_DATASOURCE_USERNAME=otokabe
      - SPRING_DATASOURCE_PASSWORD=tiga#333
      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
      - KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - KAFKA_CONSUMER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CONSUMER_GROUP_ID=secuaa
      - KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
      - KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_PRODUCER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - KAFKA_PRODUCER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer    
    ports:
      - 8771:8771
    networks: 
      - otonet
networks:
  otonet:
    driver: bridge
volumes:
  data-postgresql:
     driver: local
